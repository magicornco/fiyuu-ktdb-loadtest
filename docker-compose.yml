version: '3.8'

services:
  # SQL Server database for testing
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: fiyuu-sqlserver
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: "YourStrong@Passw0rd"
      MSSQL_PID: Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./scripts/init-sqlserver.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5


  # Web server application
  webserver:
    build: .
    container_name: fiyuu-webserver
    depends_on:
      sqlserver:
        condition: service_healthy
    volumes:
      - ./configs:/app/configs
      - ./results:/app/results
    environment:
      - DB_TYPE=mssql
      - DB_HOST=sqlserver
      - DB_PORT=1433
      - DB_USERNAME=sa
      - DB_PASSWORD=YourStrong@Passw0rd
      - DB_NAME=testdb
      - DEFAULT_QUERY=SELECT @@VERSION as version, GETDATE() as current_time
      - LOG_LEVEL=info
    ports:
      - "8080:8080"  # Web server port

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: fiyuu-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: fiyuu-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus


volumes:
  sqlserver_data:
  prometheus_data:
  grafana_data:
